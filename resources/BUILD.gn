# Copyright (c) 2016 Intel Corporation. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//tools/grit/grit_rule.gni")
import("//tools/grit/repack.gni")
import("//xwalk/resources/locales.gni")
import("//xwalk/build/tenta.gni")

if (is_android) {
  import("//build/config/android/rules.gni")
}

repack("xwalk_pak") {
  output = "$root_out_dir/xwalk.pak"
  sources = [
    "$root_gen_dir/components/components_resources.pak",
    "$root_gen_dir/content/content_resources.pak",
    "$root_gen_dir/mojo/public/js/mojo_bindings_resources.pak",
    "$root_gen_dir/net/net_resources.pak",
    "$root_gen_dir/third_party/blink/public/resources/blink_resources.pak",
    "$root_gen_dir/ui/resources/webui_resources.pak",
    "$root_gen_dir/xwalk/application/xwalk_application_resources.pak",
#todo(iotto):not supporting extensions. remove!    "$root_gen_dir/xwalk/extensions/xwalk_extensions_resources.pak",
    "$root_gen_dir/xwalk/resources/xwalk_resources.pak",
#todo(iotto)    "$root_gen_dir/xwalk/sysapps/xwalk_sysapps_resources.pak",
  ]
  deps = [
    ":generate_xwalk_resources",
    "//components/resources",
    "//content:resources",
    "//content/app/resources",
    "//mojo/public/js:resources",
    "//net:net_resources",
    "//third_party/blink/public:image_resources",
    "//third_party/blink/public:resources",
    "//ash/app_list/resources",
    "//ui/resources",
    "//xwalk/application:xwalk_application_resources",
#todo(iotto):not supporting extensions. remove!    "//xwalk/extensions:xwalk_extensions_resources",
#todo(iotto)    "//xwalk/sysapps:xwalk_sysapps_resources",
  ]
  if (!is_android) {
    sources += [
      "$root_gen_dir/content/browser/devtools/devtools_resources.pak",
    ]
    deps += [
      "//content/browser/devtools:devtools_resources",
    ]
  }
  if (toolkit_views) {
    deps += [ "//ui/views/resources" ]
  }
  if ( tenta_chromium_build ) {
    sources += [
      "$root_gen_dir/xwalk/third_party/tenta/crosswalk_extensions/resources/tenta_error_pages_browser_resources.pak",
    ]

    deps += [
      "//xwalk/third_party/tenta/crosswalk_extensions/resources",
    ]
  }
}

repack("xwalk_resources_100_percent_pak") {
  output = "$root_out_dir/chrome_100_percent.pak"
  sources = [
    "$root_gen_dir/components/components_resources_100_percent.pak",
    "$root_gen_dir/content/app/resources/content_resources_100_percent.pak",
    "$root_gen_dir/third_party/blink/public/resources/blink_scaled_resources_100_percent.pak",
    "$root_gen_dir/ui/resources/ui_resources_100_percent.pak",
  ]
  deps = [
    "//components/resources",
    "//content/app/resources",
    "//third_party/blink/public:scaled_resources_100_percent",
    "//ui/resources",
  ]
  if (toolkit_views) {
    deps += [ "//ui/views/resources:resources_grd" ]
    sources +=
        [ "$root_gen_dir/ui/views/resources/views_resources_100_percent.pak" ]
  }
}

repack("xwalk_resources_200_percent_pak") {
  output = "$root_out_dir/xwalk_200_percent.pak"
  sources = [
    "$root_gen_dir/third_party/blink/public/resources/blink_scaled_resources_200_percent.pak",
    "$root_gen_dir/components/components_resources_200_percent.pak",
    "$root_gen_dir/content/app/resources/content_resources_200_percent.pak",
    "$root_gen_dir/ui/resources/ui_resources_200_percent.pak",
  ]
  deps = [
    "//components/resources",
    "//content/app/resources:resources",
    "//third_party/blink/public:scaled_resources_200_percent",
    "//ui/resources",
  ]
  if (toolkit_views) {
    sources +=
        [ "$root_gen_dir/ui/views/resources/views_resources_200_percent.pak" ]
    deps += [ "//ui/views/resources:resources_grd" ]
  }
}

repack("xwalk_resources_300_percent_pak") {
  output = "$root_out_dir/xwalk_300_percent.pak"
  sources = [
    "$root_gen_dir/components/components_resources_300_percent.pak",
    "$root_gen_dir/ui/resources/ui_resources_300_percent.pak",
  ]
  deps = [
    "//components/resources",
    "//ui/resources",
  ]
  if (toolkit_views) {
    sources +=
        [ "$root_gen_dir/ui/views/resources/views_resources_300_percent.pak" ]
    deps += [ "//ui/views/resources:resources_grd" ]
  }
}

if (is_android) {
  android_assets("pak_file_assets") {
    sources = [
      "$root_out_dir/xwalk.pak",
      "$root_out_dir/xwalk_100_percent.pak",
    ]
    deps = [
      ":xwalk_pak",
      ":xwalk_resources_100_percent_pak",
      "//third_party/icu:icu_assets",
      "//v8:v8_external_startup_data_assets",
    ]
    disable_compression = true
  }
}

# TODO(heke123): Get rid of this grit+copy combination by putting the files in
# the right places in grit of the grd file.
grit("generate_xwalk_resources") {
  source = "//xwalk/runtime/resources/xwalk_resources.grd"
  resource_ids = "//xwalk/resources/resource_ids"
  outputs = [
    "$root_gen_dir/xwalk/resources/grit/xwalk_resources.h",
    "$root_gen_dir/xwalk/resources/grit/xwalk_resources_map.cc",
    "$root_gen_dir/xwalk/resources/grit/xwalk_resources_map.h",
    "$root_gen_dir/xwalk/resources/xwalk_resources.pak",
  ]
}

copy("xwalk_resources") {
  sources = [
    "$root_gen_dir/xwalk/resources/grit/xwalk_resources.h",
    "$root_gen_dir/xwalk/resources/grit/xwalk_resources_map.cc",
    "$root_gen_dir/xwalk/resources/grit/xwalk_resources_map.h",
  ]
  outputs = [
    "$root_gen_dir/xwalk/grit/{{source_file_part}}",
  ]
  deps = [
    ":generate_xwalk_resources",
  ]
}

android_assets("locale_pak_assets") {
  disable_compression = true
  renaming_sources = []
  renaming_destinations = []
  foreach(_locale, locales) {
    renaming_sources += [ "$root_out_dir/xwalk/locales/$_locale.pak" ]
    renaming_destinations += [ "stored-locales/$_locale.pak" ]
  }
  treat_as_locale_paks = true
  deps = [
    ":repack_locales",
  ]
}

repack_locales("repack_locales") {
  input_locales = locales
  output_locales = locales
  
  source_patterns = [
#    "${root_gen_dir}/  /xwalk_strings_",
    "${root_gen_dir}/components/strings/components_strings_",
    "${root_gen_dir}/content/app/strings/content_strings_",
    "${root_gen_dir}/ui/strings/app_locale_settings_",
    "${root_gen_dir}/ui/strings/ui_strings_",
    
  ]
  deps = [
#    ":xwalk_strings",
    "//components/strings",
    "//content/app/strings",
    "//ui/strings:app_locale_settings",    
    "//ui/strings:ui_strings",
  ]
  output_dir = "$root_out_dir/xwalk/locales"
}




# TODO(heke123): Get rid of this grit+copy combination by putting the files in
# the right places in grit of the grd file.
grit("xwalk_strings") {
  source = "//xwalk/runtime/resources/xwalk_strings.grd"
  outputs = [
    "grit/xwalk_strings.h",
  ]
  foreach(_locale, locales) {
    outputs += [ "xwalk_strings_${_locale}.pak" ]
  }

#   outputs += locales
#   output_dir = "$root_gen_dir/xwalk/locales"
   resource_ids = "//xwalk/resources/resource_ids"
}

copy("xwalk_locales") {
  sources = []
  foreach(pak, locales) {
    sources += [ "$root_gen_dir/xwalk/resources/xwalk_strings_$pak.pak" ]
  }
  outputs = [
    "$root_out_dir/locales/xwalk/{{source_file_part}}",
  ]
  deps = [
    ":xwalk_strings",
  ]
}
